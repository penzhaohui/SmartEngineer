//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartEngineer.ServiceClient.Services {
    using System.Runtime.Serialization;
    using System;
        
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountService.IAccountService", CallbackContract=typeof(SmartEngineer.ServiceClient.Services.IAccountServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IAccountService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Login", ReplyAction="http://tempuri.org/IAccountService/LoginResponse")]
        string Login(SmartEngineer.ServiceClient.Enums.AccountType accountType, string userName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Login", ReplyAction="http://tempuri.org/IAccountService/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(SmartEngineer.ServiceClient.Enums.AccountType accountType, string userName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAccountService/Logout")]
        void Logout(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAccountService/Logout")]
        System.Threading.Tasks.Task LogoutAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ValidateToken", ReplyAction="http://tempuri.org/IAccountService/ValidateTokenResponse")]
        bool ValidateToken(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ValidateToken", ReplyAction="http://tempuri.org/IAccountService/ValidateTokenResponse")]
        System.Threading.Tasks.Task<bool> ValidateTokenAsync(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountProfile", ReplyAction="http://tempuri.org/IAccountService/GetAccountProfileResponse")]
        SmartEngineer.ServiceClient.Models.Account GetAccountProfile(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountProfile", ReplyAction="http://tempuri.org/IAccountService/GetAccountProfileResponse")]
        System.Threading.Tasks.Task<SmartEngineer.ServiceClient.Models.Account> GetAccountProfileAsync(string accessToken);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAccountService/ValidateTokenCallback")]
        void ValidateTokenCallback(bool result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountServiceChannel : SmartEngineer.ServiceClient.Services.IAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServiceClient : System.ServiceModel.DuplexClientBase<SmartEngineer.ServiceClient.Services.IAccountService>, SmartEngineer.ServiceClient.Services.IAccountService
    {
        public AccountServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public AccountServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public AccountServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public string Login(SmartEngineer.ServiceClient.Enums.AccountType accountType, string userName, string Password) {
            return base.Channel.Login(accountType, userName, Password);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(SmartEngineer.ServiceClient.Enums.AccountType accountType, string userName, string Password) {
            return base.Channel.LoginAsync(accountType, userName, Password);
        }
        
        public void Logout(string accessToken) {
            base.Channel.Logout(accessToken);
        }
        
        public System.Threading.Tasks.Task LogoutAsync(string accessToken) {
            return base.Channel.LogoutAsync(accessToken);
        }
        
        public bool ValidateToken(string accessToken) {
            return base.Channel.ValidateToken(accessToken);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateTokenAsync(string accessToken) {
            return base.Channel.ValidateTokenAsync(accessToken);
        }
        
        public SmartEngineer.ServiceClient.Models.Account GetAccountProfile(string accessToken) {
            return base.Channel.GetAccountProfile(accessToken);
        }
        
        public System.Threading.Tasks.Task<SmartEngineer.ServiceClient.Models.Account> GetAccountProfileAsync(string accessToken) {
            return base.Channel.GetAccountProfileAsync(accessToken);
        }
    }
}
