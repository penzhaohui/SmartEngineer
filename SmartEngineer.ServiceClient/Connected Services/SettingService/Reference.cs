//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartEngineer.ServiceClient.Services {
    using System.Runtime.Serialization;
    using System;   
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SettingService.ISettingService")]
    public interface ISettingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingService/GetAllConfigs", ReplyAction="http://tempuri.org/ISettingService/GetAllConfigsResponse")]
        void GetAllConfigs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingService/GetAllConfigs", ReplyAction="http://tempuri.org/ISettingService/GetAllConfigsResponse")]
        System.Threading.Tasks.Task GetAllConfigsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingService/GetConfigOptions", ReplyAction="http://tempuri.org/ISettingService/GetConfigOptionsResponse")]
        SmartEngineer.ServiceClient.Models.ConfigOption[] GetConfigOptions(string configName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISettingService/GetConfigOptions", ReplyAction="http://tempuri.org/ISettingService/GetConfigOptionsResponse")]
        System.Threading.Tasks.Task<SmartEngineer.ServiceClient.Models.ConfigOption[]> GetConfigOptionsAsync(string configName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISettingService/UpdateConfigOptions")]
        void UpdateConfigOptions(SmartEngineer.ServiceClient.Models.ConfigOption[] options);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISettingService/UpdateConfigOptions")]
        System.Threading.Tasks.Task UpdateConfigOptionsAsync(SmartEngineer.ServiceClient.Models.ConfigOption[] options);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISettingServiceChannel : SmartEngineer.ServiceClient.Services.ISettingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SettingServiceClient : System.ServiceModel.ClientBase<SmartEngineer.ServiceClient.Services.ISettingService>, SmartEngineer.ServiceClient.Services.ISettingService {
        
        public SettingServiceClient() {
        }
        
        public SettingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SettingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SettingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SettingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void GetAllConfigs() {
            base.Channel.GetAllConfigs();
        }
        
        public System.Threading.Tasks.Task GetAllConfigsAsync() {
            return base.Channel.GetAllConfigsAsync();
        }
        
        public SmartEngineer.ServiceClient.Models.ConfigOption[] GetConfigOptions(string configName) {
            return base.Channel.GetConfigOptions(configName);
        }
        
        public System.Threading.Tasks.Task<SmartEngineer.ServiceClient.Models.ConfigOption[]> GetConfigOptionsAsync(string configName) {
            return base.Channel.GetConfigOptionsAsync(configName);
        }
        
        public void UpdateConfigOptions(SmartEngineer.ServiceClient.Models.ConfigOption[] options) {
            base.Channel.UpdateConfigOptions(options);
        }
        
        public System.Threading.Tasks.Task UpdateConfigOptionsAsync(SmartEngineer.ServiceClient.Models.ConfigOption[] options) {
            return base.Channel.UpdateConfigOptionsAsync(options);
        }
    }
}
