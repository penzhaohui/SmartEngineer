//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartEngineer.ServiceClient.ReportService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReportService.IReportService")]
    public interface IReportService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/SendOutDailyWorkLogReport", ReplyAction="http://tempuri.org/IReportService/SendOutDailyWorkLogReportResponse")]
        bool SendOutDailyWorkLogReport(System.DateTime workday);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/SendOutDailyWorkLogReport", ReplyAction="http://tempuri.org/IReportService/SendOutDailyWorkLogReportResponse")]
        System.Threading.Tasks.Task<bool> SendOutDailyWorkLogReportAsync(System.DateTime workday);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/SendOutDailyReviewedCaseReport", ReplyAction="http://tempuri.org/IReportService/SendOutDailyReviewedCaseReportResponse")]
        bool SendOutDailyReviewedCaseReport(string[] caseNos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/SendOutDailyReviewedCaseReport", ReplyAction="http://tempuri.org/IReportService/SendOutDailyReviewedCaseReportResponse")]
        System.Threading.Tasks.Task<bool> SendOutDailyReviewedCaseReportAsync(string[] caseNos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/SendOutClosedCaseReport", ReplyAction="http://tempuri.org/IReportService/SendOutClosedCaseReportResponse")]
        bool SendOutClosedCaseReport(string[] caseNos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/SendOutClosedCaseReport", ReplyAction="http://tempuri.org/IReportService/SendOutClosedCaseReportResponse")]
        System.Threading.Tasks.Task<bool> SendOutClosedCaseReportAsync(string[] caseNos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/SendOutWeeklyCaseReport", ReplyAction="http://tempuri.org/IReportService/SendOutWeeklyCaseReportResponse")]
        void SendOutWeeklyCaseReport();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/SendOutWeeklyCaseReport", ReplyAction="http://tempuri.org/IReportService/SendOutWeeklyCaseReportResponse")]
        System.Threading.Tasks.Task SendOutWeeklyCaseReportAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/SendOutReleaseStatusReport", ReplyAction="http://tempuri.org/IReportService/SendOutReleaseStatusReportResponse")]
        void SendOutReleaseStatusReport(string[] caseNos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/SendOutReleaseStatusReport", ReplyAction="http://tempuri.org/IReportService/SendOutReleaseStatusReportResponse")]
        System.Threading.Tasks.Task SendOutReleaseStatusReportAsync(string[] caseNos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/SendOutReleaseSummaryReport", ReplyAction="http://tempuri.org/IReportService/SendOutReleaseSummaryReportResponse")]
        void SendOutReleaseSummaryReport(string version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/SendOutReleaseSummaryReport", ReplyAction="http://tempuri.org/IReportService/SendOutReleaseSummaryReportResponse")]
        System.Threading.Tasks.Task SendOutReleaseSummaryReportAsync(string version);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReportServiceChannel : SmartEngineer.ServiceClient.ReportService.IReportService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportServiceClient : System.ServiceModel.ClientBase<SmartEngineer.ServiceClient.ReportService.IReportService>, SmartEngineer.ServiceClient.ReportService.IReportService {
        
        public ReportServiceClient() {
        }
        
        public ReportServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SendOutDailyWorkLogReport(System.DateTime workday) {
            return base.Channel.SendOutDailyWorkLogReport(workday);
        }
        
        public System.Threading.Tasks.Task<bool> SendOutDailyWorkLogReportAsync(System.DateTime workday) {
            return base.Channel.SendOutDailyWorkLogReportAsync(workday);
        }
        
        public bool SendOutDailyReviewedCaseReport(string[] caseNos) {
            return base.Channel.SendOutDailyReviewedCaseReport(caseNos);
        }
        
        public System.Threading.Tasks.Task<bool> SendOutDailyReviewedCaseReportAsync(string[] caseNos) {
            return base.Channel.SendOutDailyReviewedCaseReportAsync(caseNos);
        }
        
        public bool SendOutClosedCaseReport(string[] caseNos) {
            return base.Channel.SendOutClosedCaseReport(caseNos);
        }
        
        public System.Threading.Tasks.Task<bool> SendOutClosedCaseReportAsync(string[] caseNos) {
            return base.Channel.SendOutClosedCaseReportAsync(caseNos);
        }
        
        public void SendOutWeeklyCaseReport() {
            base.Channel.SendOutWeeklyCaseReport();
        }
        
        public System.Threading.Tasks.Task SendOutWeeklyCaseReportAsync() {
            return base.Channel.SendOutWeeklyCaseReportAsync();
        }
        
        public void SendOutReleaseStatusReport(string[] caseNos) {
            base.Channel.SendOutReleaseStatusReport(caseNos);
        }
        
        public System.Threading.Tasks.Task SendOutReleaseStatusReportAsync(string[] caseNos) {
            return base.Channel.SendOutReleaseStatusReportAsync(caseNos);
        }
        
        public void SendOutReleaseSummaryReport(string version) {
            base.Channel.SendOutReleaseSummaryReport(version);
        }
        
        public System.Threading.Tasks.Task SendOutReleaseSummaryReportAsync(string version) {
            return base.Channel.SendOutReleaseSummaryReportAsync(version);
        }
    }
}
